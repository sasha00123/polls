openapi: 3.0.2
info:
  title: ''
  version: ''
paths:
  /api/surveys/:
    get:
      operationId: listListCreateSurveys
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ListCreateSurvey'
          description: ''
      tags:
      - api
    post:
      operationId: createListCreateSurvey
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListCreateSurvey'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ListCreateSurvey'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ListCreateSurvey'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCreateSurvey'
          description: ''
      tags:
      - api
  /api/surveys/{id}:
    get:
      operationId: retrieveSurvey
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this survey.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDetailSurvey'
          description: ''
      tags:
      - api
    put:
      operationId: updateSurvey
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this survey.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDetailSurvey'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UpdateDetailSurvey'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdateDetailSurvey'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDetailSurvey'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateSurvey
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this survey.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDetailSurvey'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UpdateDetailSurvey'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdateDetailSurvey'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDetailSurvey'
          description: ''
      tags:
      - api
    delete:
      operationId: destroySurvey
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this survey.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/questions/:
    get:
      operationId: listQuestions
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AdminQuestion'
          description: ''
      tags:
      - api
    post:
      operationId: createQuestion
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminQuestion'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdminQuestion'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AdminQuestion'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminQuestion'
          description: ''
      tags:
      - api
  /api/questions/{id}:
    get:
      operationId: retrieveQuestion
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this question.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminQuestion'
          description: ''
      tags:
      - api
    put:
      operationId: updateQuestion
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this question.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminQuestion'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdminQuestion'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AdminQuestion'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminQuestion'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateQuestion
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this question.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminQuestion'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdminQuestion'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AdminQuestion'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminQuestion'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyQuestion
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this question.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/account:
    get:
      operationId: MyDetailGet
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetail'
          description: ''
      tags:
      - api
    put:
      operationId: MyDetailPut
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserDetail'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetail'
          description: ''
      tags:
      - api
    patch:
      operationId: MyDetailPatch
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserDetail'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetail'
          description: ''
      tags:
      - api
  /api/account/{id}:
    get:
      operationId: retrieveUserDetail
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetail'
          description: ''
      tags:
      - api
    put:
      operationId: updateUserDetail
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserDetail'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetail'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateUserDetail
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserDetail'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetail'
          description: ''
      tags:
      - api
  /api/token/obtain:
    post:
      operationId: createTokenObtainPair
      description: 'Takes a set of user credentials and returns an access and refresh
        JSON web

        token pair to prove the authentication of those credentials.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
      tags:
      - api
  /api/token/refresh:
    post:
      operationId: createTokenRefresh
      description: 'Takes a refresh type JSON web token and returns an access type
        JSON web

        token if the refresh token is valid.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
      tags:
      - api
  /api/token/verify:
    post:
      operationId: createTokenVerify
      description: 'Takes a token and indicates if it is valid.  This view provides
        no

        information about a token''s fitness for a particular use.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenVerify'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenVerify'
          description: ''
      tags:
      - api
  /api/register:
    post:
      operationId: createRegisterUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RegisterUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RegisterUser'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterUser'
          description: ''
      tags:
      - api
  /api/take-survey/{id}:
    put:
      operationId: TakeSurveyPut
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this survey.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TakeSurvey'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TakeSurvey'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TakeSurvey'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TakeSurvey'
          description: ''
      tags:
      - api
    patch:
      operationId: TakeSurveyPatch
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this survey.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TakeSurvey'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TakeSurvey'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TakeSurvey'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TakeSurvey'
          description: ''
      tags:
      - api
  /api/set-password:
    put:
      operationId: updateChangePassword
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChangePassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChangePassword'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangePassword'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateChangePassword
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChangePassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChangePassword'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangePassword'
          description: ''
      tags:
      - api
components:
  schemas:
    ListCreateSurvey:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 255
        description:
          type: string
        begin:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
        creator:
          type: string
          readOnly: true
      required:
      - title
      - description
    UpdateDetailSurvey:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 255
        description:
          type: string
        begin:
          type: string
          readOnly: true
        end:
          type: string
          format: date-time
        creator:
          type: string
          readOnly: true
        questions:
          type: array
          items:
            type: object
            properties:
              text:
                type: string
              type:
                enum:
                - open
                - s_ch
                - m_ch
                type: string
              survey:
                type: integer
              options:
                type: string
                readOnly: true
            required:
            - text
            - type
            - survey
      required:
      - title
      - description
      - questions
    AdminQuestion:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        text:
          type: string
        type:
          enum:
          - open
          - s_ch
          - m_ch
          type: string
        survey:
          type: integer
        options:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                readOnly: true
              value:
                type: string
                maxLength: 255
              is_correct:
                type: boolean
            required:
            - value
            - is_correct
      required:
      - text
      - type
      - survey
      - options
    UserDetail:
      type: object
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        submissions:
          type: array
          items:
            type: object
            properties:
              survey:
                type: integer
              created:
                type: string
                format: date-time
                readOnly: true
            required:
            - survey
      required:
      - username
      - submissions
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
          writeOnly: true
      required:
      - username
      - password
    TokenRefresh:
      type: object
      properties:
        refresh:
          type: string
      required:
      - refresh
    TokenVerify:
      type: object
      properties:
        token:
          type: string
      required:
      - token
    RegisterUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        password:
          type: string
          writeOnly: true
        date_joined:
          type: string
          format: date-time
          readOnly: true
      required:
      - username
      - password
    TakeSurvey:
      type: object
      properties:
        answers:
          type: array
          items:
            type: object
            properties:
              answers:
                type: string
              is_valid:
                type: boolean
                readOnly: true
              created:
                type: string
                format: date-time
                readOnly: true
              question:
                type: integer
            required:
            - answers
            - question
      required:
      - answers
    ChangePassword:
      type: object
      properties:
        old_password:
          type: string
          writeOnly: true
        new_password:
          type: string
          writeOnly: true
      required:
      - old_password
      - new_password
